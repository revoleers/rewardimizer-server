<?php

namespace Proxies\__CG__\Entities\Wallet;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Card extends \Entities\Wallet\Card implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getCardId()
    {
        $this->__load();
        return parent::getCardId();
    }

    public function setCardName($cardName)
    {
        $this->__load();
        return parent::setCardName($cardName);
    }

    public function getCardName()
    {
        $this->__load();
        return parent::getCardName();
    }

    public function setCardPriority($cardPriority)
    {
        $this->__load();
        return parent::setCardPriority($cardPriority);
    }

    public function getCardPriority()
    {
        $this->__load();
        return parent::getCardPriority();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setModifiedAt($modifiedAt)
    {
        $this->__load();
        return parent::setModifiedAt($modifiedAt);
    }

    public function getModifiedAt()
    {
        $this->__load();
        return parent::getModifiedAt();
    }

    public function setProgram(\Entities\Reward\Program $program = NULL)
    {
        $this->__load();
        return parent::setProgram($program);
    }

    public function getProgram()
    {
        $this->__load();
        return parent::getProgram();
    }

    public function setCardType(\Entities\Wallet\CardType $cardType = NULL)
    {
        $this->__load();
        return parent::setCardType($cardType);
    }

    public function getCardType()
    {
        $this->__load();
        return parent::getCardType();
    }

    public function setCreatedBy(\Entities\User\User $createdBy = NULL)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }

    public function setModifiedBy(\Entities\User\User $modifiedBy = NULL)
    {
        $this->__load();
        return parent::setModifiedBy($modifiedBy);
    }

    public function getModifiedBy()
    {
        $this->__load();
        return parent::getModifiedBy();
    }

    public function addWallet(\Entities\Wallet\Wallet $wallets)
    {
        $this->__load();
        return parent::addWallet($wallets);
    }

    public function getWallets()
    {
        $this->__load();
        return parent::getWallets();
    }

    public function setBank(\Entities\Finance\Bank $bank = NULL)
    {
        $this->__load();
        return parent::setBank($bank);
    }

    public function getBank()
    {
        $this->__load();
        return parent::getBank();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'card_id', 'card_name', 'card_priority', 'created_at', 'modified_at', 'program', 'card_type', 'bank', 'created_by', 'modified_by', 'wallets');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}